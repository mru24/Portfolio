@mixin css3-prefix($property, $value) {
  -webkit-#{$property}: #{$value};
   -khtml-#{$property}: #{$value};
     -moz-#{$property}: #{$value};
      -ms-#{$property}: #{$value};
       -o-#{$property}: #{$value};
          #{$property}: #{$value};
}

// box-sizing
@mixin box-sizing($type) {
  @include css3-prefix('box-sizing', $type);
}

// border-radius
@mixin border-radius($radius) {
    @include css3-prefix('border-radius', $radius);
}

@mixin border-radius-separate($topLeftRadius, $topRightRadius, $bottomRightRadius, $bottomLeftRadius) {
  -webkit-border-top-left-radius:     $topLeftRadius;
  -webkit-border-top-right-radius:    $topRightRadius;
  -webkit-border-bottom-right-radius: $bottomRightRadius;
  -webkit-border-bottom-left-radius:  $bottomLeftRadius;

  -moz-border-radius-topleft:     $topLeftRadius;
  -moz-border-radius-topright:    $topRightRadius;
  -moz-border-radius-bottomright: $bottomRightRadius;
  -moz-border-radius-bottomleft:  $bottomLeftRadius;

  border-top-left-radius:     $topLeftRadius;
  border-top-right-radius:    $topRightRadius;
  border-bottom-right-radius: $bottomRightRadius;
  border-bottom-left-radius:  $bottomLeftRadius;
}

// background-gradient linear-gradient
@mixin background-gradient($startColor: #7E0000, $endColor: #000000) {
    background-color: $startColor;
    background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
    background-image: -webkit-linear-gradient(top, $startColor, $endColor);
    background-image:    -moz-linear-gradient(top, $startColor, $endColor);
    background-image:     -ms-linear-gradient(top, $startColor, $endColor);
    background-image:      -o-linear-gradient(top, $startColor, $endColor);
    background-image:         linear-gradient(top, $startColor, $endColor);
    filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}

// box-shadow
@mixin box-shadow($x, $y, $blur, $color) {

    @include css3-prefix('box-shadow', $x $y $blur $color);

}

// text-shadow
@mixin text-shadow($x, $y, $blur, $color) {
    text-shadow: $x $y $blur $color;
}


// responsive max height
@mixin bp-max-height {
  @media only screen and (max-height: 800px) {
    @content;
  }
}

// responsive max width
@mixin bp-max-width {
  @media only screen and (max-width: 768px) {
    @content;
  }
}
